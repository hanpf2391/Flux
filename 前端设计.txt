“熵流 (Flux)” 单元格背景色功能规格书 V2.6
1. 核心设计原则
直观易用 (Intuitive): 用户无需任何学习，就能立刻理解如何为单元格着色。
低侵入性 (Unobtrusive): 颜色选择功能不应干扰核心的文本编辑体验。
性能优先 (Performant):-- 新增的颜色数据必须对现有的数据加载和渲染性能影响最小。
2. 后端开发需求
FR-1.1 (数据库表结构变更):
指令: 必须在 messages 表中新增一个字段，用于存储单元格的背景色。
字段定义:
字段名: bg_color
类型: VARCHAR(7) (用于存储 #RRGGBB 格式的十六进制颜色代码)。
约束: 允许为 NULL (表示没有设置颜色，使用默认背景)。
FR-1.2 (数据模型与DTO更新):
指令: 必须同步更新所有相关的数据模型和数据传输对象。
Message 实体类: 新增 private String bgColor; 字段，并使用 @TableField("bg_color") 进行映射。
CreateMessageDTO / UpdateMessageDTO: 新增 String bgColor 字段。
MessageDTO (用于API和WebSocket返回): 新增 String bgColor 字段。
FR-1.3 (业务逻辑与API更新):
指令: 必须更新 Service 层和 Controller 层的逻辑，以处理颜色数据的保存。
MessageService: create/update 方法需要接收 bgColor 参数，并在持久化到数据库前进行基本的颜色代码格式校验（例如，使用正则表达式验证是否为有效的#RRGGBB格式），以防止非法数据注入。
FR-1.4 (WebSocket广播更新):
指令: 必须更新 CELL_UPDATED 广播消息的 payload 格式，加入颜色信息。
新消息格式:
code
JSON
{
  "type": "CELL_UPDATED",
  "payload": {
    "rowIndex": 10,
    "colIndex": 20,
    "content": "新内容",
    "bgColor": "#FF5733" // 新增的背景色字段
  }
}
3. 前端开发需求
FR-2.1 (UI/UX设计：调色盘):
指令: 必须在用户进入“编辑模式”时，提供一个调色盘UI。
交互设计:
当用户单击一个单元格，进入“编辑模式”后，在输入框的下方或右侧，出现一个小巧的、非侵入式的调色盘。
调色盘由一组预设的颜色样本（圆形或方形色块）组成。
提供 8-12 种精心挑选的、饱和度适中、视觉和谐的颜色。严禁使用丑陋、刺眼或过于复杂的颜色选择器。
调色盘中必须包含一个“清除颜色”的选项（例如一个带有斜杠的色块），用于将单元格恢复为默认背景。
FR-2.2 (状态管理与数据流):
指令: 必须在前端的状态管理（Pinia Store）和组件中，完整地处理颜色数据。
本地状态: 编辑中的单元格需要一个临时状态来存储当前选中的颜色。
保存逻辑: 当用户触发保存时（按Enter或失焦），必须将选中的 bgColor (或null，如果清除了颜色) 与 content 一同发送给后端。
WebSocket监听: Pinia store 中处理 CELL_UPDATED 消息的 action，必须同时更新对应单元格的 content 和 bgColor 状态。
FR-2.3 (动态样式渲染):
指令: 必须将单元格的背景色与前端的响应式状态进行绑定。
实现逻辑:
在渲染每个单元格的组件上，使用Vue的动态样式绑定 (:style)。
样式绑定的值为：{ backgroundColor: cell.bgColor }。
当 Pinia store 中的 bgColor 状态因WebSocket广播而改变时，单元格的背景色应自动、实时地更新，无需任何额外操作。
FR-2.4 (文本颜色自适应 - 关键体验):
指令: 必须实现一个简单的文本颜色自适应逻辑，以保证可读性。
实现逻辑:
创建一个辅助函数 getTextColor(bgColor)。
该函数接收一个背景色的十六进制代码，并计算其亮度 (Luminance)。
如果背景色是深色，则返回 #FFFFFF (白色) 作为文本颜色。
如果背景色是浅色，则返回 #000000 (黑色) 作为文本颜色。
在渲染单元格时，同时动态绑定其 color CSS属性。
总结：全新的用户创作流程
用户单击一个单元格，进入编辑模式。
输入框和调色盘同时出现。
用户输入文本，并从调色盘中点选一个背景色。
用户按下 Enter 键。
前端将文本和颜色代码一同发送到后端。
后端保存数据，并通过WebSocket向所有人广播带有新文本和新颜色的更新消息。
所有用户的屏幕上，对应单元格的文本和背景色都实时更新。
如果用户选择了一个深色背景，单元格内的文字会自动变为白色，以保证清晰可读。